



Path Computation Element                                        A. Stone
Internet-Draft                                                     Nokia
Intended status: Standards Track                                   C. Li
Expires: 9 February 2025                                          Huawei
                                                                S. Sidor
                                                                   Cisco
                                                           8 August 2024


           PCEP extensions for updating Open Message content
                   draft-stone-pce-update-open-latest

Abstract

   This document describes extensions to Path Computation Element
   Protocol (PCEP) to permit a PCEP Speaker to update information
   previously exchanged during PCEP Open procedures.

Discussion Venues

   This note is to be removed before publishing as an RFC.

   Discussion of this document takes place on the Path Computation
   Element Working Group mailing list (pce@ietf.org), which is archived
   at https://mailarchive.ietf.org/arch/browse/pce/.

   Source for this draft and an issue tracker can be found at
   https://github.com/astone282/draft-stone-pce-update-open.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 9 February 2025.

Copyright Notice

   Copyright (c) 2024 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
   3.  Operational considerations
     3.1.  Capability change
     3.2.  Node-wide property change
   4.  Procedures
     4.1.  Capability Advertisement
     4.2.  Open Refresh
   5.  Security Considerations
   6.  Implementation Status
   7.  IANA Considerations
     7.1.  Open Object Flag Field
     7.2.  NOTIFICATION Object
   8.  References
     8.1.  Normative References
     8.2.  Informative References
   Acknowledgments
   Authors' Addresses

1.  Introduction

   The Path Computation Element Communication Protocol (PCEP) [RFC5440]
   provides mechanisms for Path Computation Elements (PCEs) to perform
   path computations in response to requests from Path Computation
   Clients (PCCs).

   [RFC5440] outlines the message exchange procedures that PCEP Speakers
   must follow upon initial connection to establish a PCEP Peer
   relationship.  This procedure includes sending an Open Message
   containing an OPEN Object, which conveys various session
   characteristics such as protocol timers.  The OPEN Object can be
   extended with TLVs to convey additional session characteristics, such
   as PCE capabilities (e.g., [RFC8408]) or specific values and ranges
   (e.g., [RFC8664] and [draft-ietf-pce-controlled-id-space]).  This
   information is exchanged only once per session and cannot be
   dynamically modified without tearing down and re-establishing the
   PCEP session, which can be operationally disruptive.

   Additionally, [RFC5440] describes a Notification Message (PCNtf)
   containing a NOTIFICATION Object, which a PCEP Speaker may use to
   notify the other speaker of an event.

   This document proposes a generic mechanism that allows a PCEP Speaker
   to update previously exchanged Open Message information using a PCNtf
   Message, known as an Open Refresh.  This approach mitigates the need
   to terminate the session to modify any exchanged information.

   Note that [draft-ietf-pce-state-sync] also proposes using PCNtf
   Message to relay PcOpen Messages between PCEs about each PCE's
   connected peers.  It is anticipated that [draft-ietf-pce-state-sync]
   will be defined in parallel, with unique object definitions, as the
   semantics of a PCEP Speaker exchanging its own information differ
   from exchanging information related to a connected peer.

   This documented describes a generic extension and mechanism to update
   Open Object content but future documents MAY describe further
   semantics on a per TLV basis.

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

   Open Refresh : The act of modifying content previously exchanged
   during PCEP Open Message in an ad-hoc manner without terminating the
   PCEP session.

3.  Operational considerations

   This section discusses some high level considerations that should be
   considered when supporting Open Refresh.  While scenarios described
   here exist in present day PCEP, they require explicitly tearing down
   the PCEP session which gives a clear indication of potential system
   impact.  With ad-hoc manipulation of open information, the impact of
   a possible change may not be evident so this section attempts to
   describe some of these considerations.

3.1.  Capability change

   One use case of PcOpen is to exchange device software capabilities
   and feature enablement to determine whether a PCEP Speaker may
   support a given operation defined in PCEP extensions.  If a PCEP
   speaker supports removal of a capability using Open Refresh, then all
   state related to the capability MUST be reset and removed and MUST
   follow the guidelines set out by the capability should the other PCEP
   no longer support the capability.  This may impact device wide state
   and network traffic.  For example, [RFC8281] defines the STATEFUL-
   PCE-CAPABILITY-TLV to indicate support for PCE-Initiated LSPs.  The
   removal of this capability would result in PCE-Initiated LSPs being
   deleted from each PCEP Speaker.

3.2.  Node-wide property change

   One use case of PcOpen is to exchange device-level configurations or
   settings.  In the case of statefully delegated LSPs ([RFC8231], the
   modification of these values may trigger path calculations for
   established LSP Objects and/or the possibility of LSP tear down.

4.  Procedures

4.1.  Capability Advertisement

   A PCEP Speaker indicates support of Open Refresh during the PCEP
   Initialization phase ([RFC5440]).  As per RFC5440, a PCEP Speaker
   MUST send a PCEP Open Message with exactly one OPEN object.  The PCEP
   speaker indicates support for Open Refresh by setting the OPEN-
   REFRESH-CAPABILITY (R-Bit) to 1 in the PCEP Open Message Flags field.

   IANA is requested to allocate the R-Bit from the Open Object Flag
   Field registry.

   *  R (OPEN-REFRESH-CAPABILITY - 1 bit - TBD1): If set to 1 by a PCEP
      speaker, the PCEP speaker indicates that the session supports
      receiving an Open Refresh message.

   If a PCEP speaker receives an Open Message which does not contain the
   OPEN-REFRESH-CAPABILITY, the PCEP Speaker MUST NOT send Open Refresh
   messages to the remote speaker.

4.2.  Open Refresh

   An Open Refresh is transmitted by sending a PCNtf Message ([RFC5440])
   containing a NOTIFICATION Object with Notification-type=TBD2 (Open-
   Refresh).

   // TODO below, on the fence about it.  Could use the value to
   indicate add/remove/modify of a given TLV rather than sending a full
   snapshot.

   // TODO But i'm on the fence if it would be better or worse to encode
   a snapshot vs individual diff changes.  Open to supporting signalling
   add/remove/modify.

   The Open-Refresh NOTIFICATION Object Notification-value MUST be set
   to zero.

   The Open-Refresh NOTIFICATION Object encodes any TLV which may be
   encoded in an OPEN Object.

   The Open-Refresh NOTIFICATION Object contains a snapshot of all
   unmodified and modified TLVs.

   Upon receiving an Open-Refresh NOTIFICATION Object, the PCEP Speaker
   compares the newly received TLVs with the previously received TLVs to
   determine what has changed.  An omission of a TLV MUST be treated as
   a removal of the TLV and perform necessary side effect(s) to system
   state as if the TLV was never exchanged during PcOpen.

   If the PCEP Speaker determines it cannot support the Open-Refresh
   differential change(s), the PCEP Speaker generates a PCEP Error
   (PCErr) with Error-type=TBD3 (Unsupported-Open-Refresh) and error-
   value TBD4 and it SHOULD terminate the PCEP session.

5.  Security Considerations

   TODO Security

6.  Implementation Status

   [Note to the RFC Editor - remove this section before publication, as
   well as remove the reference to RFC 7942.]

   This section records the status of known implementations of the
   protocol defined by this specification at the time of posting of this
   Internet-Draft, and is based on a proposal described in [RFC7942].
   The description of implementations in this section is intended to
   assist the IETF in its decision processes in progressing drafts to
   RFCs.  Please note that the listing of any individual implementation
   here does not imply endorsement by the IETF.  Furthermore, no effort
   has been spent to verify the information presented here that was
   supplied by IETF contributors.  This is not intended as, and must not
   be construed to be, a catalog of available implementations or their
   features.  Readers are advised to note that other implementations may
   exist.

   According to [RFC7942], "this will allow reviewers and working groups
   to assign due consideration to documents that have the benefit of
   running code, which may serve as evidence of valuable experimentation
   and feedback that have made the implemented protocols more mature.
   It is up to the individual working groups to use this information as
   they see fit".

7.  IANA Considerations

7.1.  Open Object Flag Field

   IANA is requested to allocate a new bit value in the Open Object Flag
   Field

            +======+=========================+===============+
            | Bit  |       Description       |     Reference |
            +======+=========================+===============+
            | TBD1 | OPEN-REFRESH-CAPABILITY | This document |
            +------+-------------------------+---------------+

                                 Table 1

7.2.  NOTIFICATION Object

   IANA is requested to allocate a new Notification-type value in the
   NOTIFICATION Object

                 +=======+==============+===============+
                 | Value | Description  |     Reference |
                 +=======+==============+===============+
                 | TBD2  | Open-Refresh | This document |
                 +-------+--------------+---------------+

                                 Table 2

8.  References

8.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC5440]  Vasseur, JP., Ed. and JL. Le Roux, Ed., "Path Computation
              Element (PCE) Communication Protocol (PCEP)", RFC 5440,
              DOI 10.17487/RFC5440, March 2009,
              <https://www.rfc-editor.org/rfc/rfc5440>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

8.2.  Informative References

   [RFC8231]  Crabbe, E., Minei, I., Medved, J., and R. Varga, "Path
              Computation Element Communication Protocol (PCEP)
              Extensions for Stateful PCE", RFC 8231,
              DOI 10.17487/RFC8231, September 2017,
              <https://www.rfc-editor.org/rfc/rfc8231>.

   [RFC8408]  Sivabalan, S., Tantsura, J., Minei, I., Varga, R., and J.
              Hardwick, "Conveying Path Setup Type in PCE Communication
              Protocol (PCEP) Messages", RFC 8408, DOI 10.17487/RFC8408,
              July 2018, <https://www.rfc-editor.org/rfc/rfc8408>.

   [RFC8664]  Sivabalan, S., Filsfils, C., Tantsura, J., Henderickx, W.,
              and J. Hardwick, "Path Computation Element Communication
              Protocol (PCEP) Extensions for Segment Routing", RFC 8664,
              DOI 10.17487/RFC8664, December 2019,
              <https://www.rfc-editor.org/rfc/rfc8664>.

Acknowledgments

   The authors would like to acknowledge Dhruv Dhody for his discussion
   and ideas related to this document.

Authors' Addresses

   Andrew Stone
   Nokia
   Email: andrew.stone@nokia.com


   Cheng Li
   Huawei
   Email: c.l@huawei.com


   Samuel Sidor
   Cisco
   Email: ssidor@cisco.com
